{"remainingRequest":"C:\\Code\\Web\\FeelingBlue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Code\\Web\\FeelingBlue\\node_modules\\pug-plain-loader\\index.js!C:\\Code\\Web\\FeelingBlue\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Code\\Web\\FeelingBlue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Code\\Web\\FeelingBlue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Code\\Web\\FeelingBlue\\src\\App.vue?vue&type=template&id=7ba5bd90&scoped=true&lang=pug&","dependencies":[{"path":"C:\\Code\\Web\\FeelingBlue\\src\\App.vue","mtime":1572170512965},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\pug-plain-loader\\index.js","mtime":1521946589000},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Code\\Web\\FeelingBlue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}